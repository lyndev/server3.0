/**
 * @date 2014/8/20
 * @author ChenLong
 */
package chenlong.playerdatacoder.ui;

import javax.swing.JOptionPane;
import org.apache.commons.codec.binary.Base64;
import org.apache.log4j.Logger;
import chenlong.playerdatacoder.util.ZLibUtils;

/**
 *
 * @author ChenLong
 */
public class MainFrame extends javax.swing.JFrame {

    private final static Logger logger = Logger.getLogger(MainFrame.class);

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        codeButton = new javax.swing.JButton();
        decodeButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textData = new javax.swing.JTextArea();
        resetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PlayerData编码工具");

        codeButton.setText("编码");
        codeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeButtonActionPerformed(evt);
            }
        });

        decodeButton.setText("解码");
        decodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decodeButtonActionPerformed(evt);
            }
        });

        textData.setColumns(20);
        textData.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        textData.setLineWrap(true);
        textData.setRows(5);
        jScrollPane1.setViewportView(textData);

        resetButton.setText("清除");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(codeButton)
                .addGap(18, 18, 18)
                .addComponent(decodeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 486, Short.MAX_VALUE)
                .addComponent(resetButton)
                .addGap(27, 27, 27))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeButton)
                    .addComponent(decodeButton)
                    .addComponent(resetButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeButtonActionPerformed
        try {
            String data = textData.getText();
            if (data.trim().isEmpty()) {
                JOptionPane.showConfirmDialog(this, "请输入数据", "编码错误", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (Base64.isBase64(data)) {
                JOptionPane.showConfirmDialog(this, "貌似数据已经是编码过的", "编码错误", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
            } else {
                byte[] compressed = ZLibUtils.compress(data.getBytes());
                byte[] base64Data = Base64.encodeBase64(compressed);
                String result = new String(base64Data, "UTF-8");
                textData.setText(result);
                codeButton.setEnabled(false);
                decodeButton.setEnabled(true);
            }
        } catch (Throwable t) {
            logger.error("exception", t);
            JOptionPane.showConfirmDialog(this, t.toString(), "编码错误", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_codeButtonActionPerformed

    private void decodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decodeButtonActionPerformed
        try {
            String data = textData.getText();
            if (data.trim().isEmpty()) {
                JOptionPane.showConfirmDialog(this, "请输入数据", "解码错误", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (!Base64.isBase64(data)) {
                JOptionPane.showConfirmDialog(this, "貌似数据不是编码过的", "解码错误", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
            } else {
                byte[] base64Data = Base64.decodeBase64(data.getBytes());
                byte[] decompressed = ZLibUtils.decompress(base64Data);

                String result = new String(decompressed, "UTF-8");
                textData.setText(result);
                codeButton.setEnabled(true);
                decodeButton.setEnabled(false);
            }
        } catch (Throwable t) {
            logger.error("exception", t);
            JOptionPane.showConfirmDialog(this, t.toString(), "解码错误", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_decodeButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        textData.setText("");
        codeButton.setEnabled(true);
        decodeButton.setEnabled(true);
    }//GEN-LAST:event_resetButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton codeButton;
    private javax.swing.JButton decodeButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton resetButton;
    private javax.swing.JTextArea textData;
    // End of variables declaration//GEN-END:variables
}
